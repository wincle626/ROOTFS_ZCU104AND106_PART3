/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mpi_Comm */

#ifndef _Included_mpi_Comm
#define _Included_mpi_Comm
#ifdef __cplusplus
extern "C" {
#endif
#undef mpi_Comm_TYPE_SHARED
#define mpi_Comm_TYPE_SHARED 0L
#undef mpi_Comm_SELF
#define mpi_Comm_SELF 1L
#undef mpi_Comm_WORLD
#define mpi_Comm_WORLD 2L
/*
 * Class:     mpi_Comm
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_init
  (JNIEnv *, jclass);

/*
 * Class:     mpi_Comm
 * Method:    getComm
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_getComm
  (JNIEnv *, jobject, jint);

/*
 * Class:     mpi_Comm
 * Method:    dup
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_dup
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    iDup
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_mpi_Comm_iDup
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    dupWithInfo
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_dupWithInfo
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_Comm
 * Method:    getSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_getSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    getRank
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_getRank
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    compare
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_compare
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mpi_Comm
 * Method:    free
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_free
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    setInfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_setInfo
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_Comm
 * Method:    getInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_getInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    disconnect
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_disconnect
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    getGroup
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_getGroup
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    isInter
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_mpi_Comm_isInter
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    createIntercomm
 * Signature: (JJIII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_createIntercomm
  (JNIEnv *, jobject, jlong, jlong, jint, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    send
 * Signature: (JLjava/lang/Object;ZIIJIII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_send
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    recv
 * Signature: (JLjava/lang/Object;ZIIJIII[J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_recv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint, jlongArray);

/*
 * Class:     mpi_Comm
 * Method:    sendRecv
 * Signature: (JLjava/lang/Object;ZIIJIIILjava/lang/Object;ZIIJIII[J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_sendRecv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint, jobject, jboolean, jint, jint, jlong, jint, jint, jint, jlongArray);

/*
 * Class:     mpi_Comm
 * Method:    sendRecvReplace
 * Signature: (JLjava/lang/Object;ZIIJIIIII[J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_sendRecvReplace
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint, jint, jint, jlongArray);

/*
 * Class:     mpi_Comm
 * Method:    bSend
 * Signature: (JLjava/lang/Object;ZIIJIII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_bSend
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    sSend
 * Signature: (JLjava/lang/Object;ZIIJIII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_sSend
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    rSend
 * Signature: (JLjava/lang/Object;ZIIJIII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_rSend
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iSend
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iSend
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    ibSend
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_ibSend
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    isSend
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_isSend
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    irSend
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_irSend
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iRecv
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iRecv
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    sendInit
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_sendInit
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    bSendInit
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_bSendInit
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    sSendInit
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_sSendInit
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    rSendInit
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_rSendInit
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    recvInit
 * Signature: (JLjava/nio/Buffer;IJII)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_recvInit
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    pack
 * Signature: (JLjava/lang/Object;ZIIJ[BI)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_pack
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jbyteArray, jint);

/*
 * Class:     mpi_Comm
 * Method:    unpack
 * Signature: (J[BILjava/lang/Object;ZIIJ)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_unpack
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jobject, jboolean, jint, jint, jlong);

/*
 * Class:     mpi_Comm
 * Method:    packSize
 * Signature: (JIJ)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_packSize
  (JNIEnv *, jobject, jlong, jint, jlong);

/*
 * Class:     mpi_Comm
 * Method:    iProbe
 * Signature: (JII)Lmpi/Status;
 */
JNIEXPORT jobject JNICALL Java_mpi_Comm_iProbe
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    probe
 * Signature: (JII[J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_probe
  (JNIEnv *, jobject, jlong, jint, jint, jlongArray);

/*
 * Class:     mpi_Comm
 * Method:    createKeyval_jni
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_createKeyval_1jni
  (JNIEnv *, jclass);

/*
 * Class:     mpi_Comm
 * Method:    freeKeyval_jni
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_freeKeyval_1jni
  (JNIEnv *, jclass, jint);

/*
 * Class:     mpi_Comm
 * Method:    setAttr
 * Signature: (JI[B)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_setAttr
  (JNIEnv *, jobject, jlong, jint, jbyteArray);

/*
 * Class:     mpi_Comm
 * Method:    getAttr_predefined
 * Signature: (JI)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_mpi_Comm_getAttr_1predefined
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    getAttr
 * Signature: (JI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_mpi_Comm_getAttr
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    deleteAttr
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_deleteAttr
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    getTopology
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mpi_Comm_getTopology
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    abort
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_abort
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    setErrhandler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_setErrhandler
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_Comm
 * Method:    getErrhandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_getErrhandler
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    callErrhandler
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_callErrhandler
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    barrier
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_barrier
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    iBarrier
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iBarrier
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    bcast
 * Signature: (JLjava/lang/Object;ZIIJII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_bcast
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iBcast
 * Signature: (JLjava/nio/Buffer;IJI)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iBcast
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    gather
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZIIJII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_gather
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iGather
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;IJI)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iGather
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    gatherv
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZI[I[IJII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_gatherv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jintArray, jintArray, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iGatherv
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;[I[IJI)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iGatherv
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jintArray, jintArray, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    scatter
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZIIJII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_scatter
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iScatter
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;IJI)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iScatter
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    scatterv
 * Signature: (JLjava/lang/Object;ZI[I[IJILjava/lang/Object;ZIIJII)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_scatterv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jintArray, jintArray, jlong, jint, jobject, jboolean, jint, jint, jlong, jint, jint);

/*
 * Class:     mpi_Comm
 * Method:    iScatterv
 * Signature: (JLjava/nio/Buffer;[I[IJLjava/nio/Buffer;IJI)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iScatterv
  (JNIEnv *, jobject, jlong, jobject, jintArray, jintArray, jlong, jobject, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    allGather
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZIIJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_allGather
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iAllGather
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iAllGather
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_Comm
 * Method:    allGatherv
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZI[I[IJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_allGatherv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jintArray, jintArray, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iAllGatherv
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;[I[IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iAllGatherv
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jintArray, jintArray, jlong);

/*
 * Class:     mpi_Comm
 * Method:    allToAll
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZIIJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_allToAll
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iAllToAll
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iAllToAll
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_Comm
 * Method:    allToAllv
 * Signature: (JLjava/lang/Object;ZI[I[IJILjava/lang/Object;ZI[I[IJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_allToAllv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jintArray, jintArray, jlong, jint, jobject, jboolean, jint, jintArray, jintArray, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iAllToAllv
 * Signature: (JLjava/nio/Buffer;[I[IJLjava/nio/Buffer;[I[IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iAllToAllv
  (JNIEnv *, jobject, jlong, jobject, jintArray, jintArray, jlong, jobject, jintArray, jintArray, jlong);

/*
 * Class:     mpi_Comm
 * Method:    allToAllw
 * Signature: (JLjava/nio/Buffer;[I[I[JLjava/nio/Buffer;[I[I[J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_allToAllw
  (JNIEnv *, jobject, jlong, jobject, jintArray, jintArray, jlongArray, jobject, jintArray, jintArray, jlongArray);

/*
 * Class:     mpi_Comm
 * Method:    iAllToAllw
 * Signature: (JLjava/nio/Buffer;[I[I[JLjava/nio/Buffer;[I[I[J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iAllToAllw
  (JNIEnv *, jobject, jlong, jobject, jintArray, jintArray, jlongArray, jobject, jintArray, jintArray, jlongArray);

/*
 * Class:     mpi_Comm
 * Method:    neighborAllGather
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZIIJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_neighborAllGather
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iNeighborAllGather
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iNeighborAllGather
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_Comm
 * Method:    neighborAllGatherv
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZI[I[IJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_neighborAllGatherv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jintArray, jintArray, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iNeighborAllGatherv
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;[I[IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iNeighborAllGatherv
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jintArray, jintArray, jlong);

/*
 * Class:     mpi_Comm
 * Method:    neighborAllToAll
 * Signature: (JLjava/lang/Object;ZIIJILjava/lang/Object;ZIIJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_neighborAllToAll
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jobject, jboolean, jint, jint, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iNeighborAllToAll
 * Signature: (JLjava/nio/Buffer;IJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iNeighborAllToAll
  (JNIEnv *, jobject, jlong, jobject, jint, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_Comm
 * Method:    neighborAllToAllv
 * Signature: (JLjava/lang/Object;ZI[I[IJILjava/lang/Object;ZI[I[IJI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_neighborAllToAllv
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jintArray, jintArray, jlong, jint, jobject, jboolean, jint, jintArray, jintArray, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iNeighborAllToAllv
 * Signature: (JLjava/nio/Buffer;[I[IJLjava/nio/Buffer;[I[IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iNeighborAllToAllv
  (JNIEnv *, jobject, jlong, jobject, jintArray, jintArray, jlong, jobject, jintArray, jintArray, jlong);

/*
 * Class:     mpi_Comm
 * Method:    reduce
 * Signature: (JLjava/lang/Object;ZILjava/lang/Object;ZIIJILmpi/Op;JI)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_reduce
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jobject, jboolean, jint, jint, jlong, jint, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    iReduce
 * Signature: (JLjava/nio/Buffer;Ljava/nio/Buffer;IJILmpi/Op;JI)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iReduce
  (JNIEnv *, jobject, jlong, jobject, jobject, jint, jlong, jint, jobject, jlong, jint);

/*
 * Class:     mpi_Comm
 * Method:    allReduce
 * Signature: (JLjava/lang/Object;ZILjava/lang/Object;ZIIJILmpi/Op;J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_allReduce
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jobject, jboolean, jint, jint, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    iAllReduce
 * Signature: (JLjava/nio/Buffer;Ljava/nio/Buffer;IJILmpi/Op;J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iAllReduce
  (JNIEnv *, jobject, jlong, jobject, jobject, jint, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    reduceScatter
 * Signature: (JLjava/lang/Object;ZILjava/lang/Object;ZI[IJILmpi/Op;J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_reduceScatter
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jobject, jboolean, jint, jintArray, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    iReduceScatter
 * Signature: (JLjava/nio/Buffer;Ljava/lang/Object;[IJILmpi/Op;J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iReduceScatter
  (JNIEnv *, jobject, jlong, jobject, jobject, jintArray, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    reduceScatterBlock
 * Signature: (JLjava/lang/Object;ZILjava/lang/Object;ZIIJILmpi/Op;J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_reduceScatterBlock
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jobject, jboolean, jint, jint, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    iReduceScatterBlock
 * Signature: (JLjava/nio/Buffer;Ljava/nio/Buffer;IJILmpi/Op;J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Comm_iReduceScatterBlock
  (JNIEnv *, jobject, jlong, jobject, jobject, jint, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    reduceLocal
 * Signature: (Ljava/lang/Object;ZILjava/lang/Object;ZIIJJ)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_reduceLocal
  (JNIEnv *, jclass, jobject, jboolean, jint, jobject, jboolean, jint, jint, jlong, jlong);

/*
 * Class:     mpi_Comm
 * Method:    reduceLocalUf
 * Signature: (Ljava/lang/Object;ZILjava/lang/Object;ZIIJILmpi/Op;J)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_reduceLocalUf
  (JNIEnv *, jclass, jobject, jboolean, jint, jobject, jboolean, jint, jint, jlong, jint, jobject, jlong);

/*
 * Class:     mpi_Comm
 * Method:    setName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mpi_Comm_setName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     mpi_Comm
 * Method:    getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mpi_Comm_getName
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
