/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mpi_File */

#ifndef _Included_mpi_File
#define _Included_mpi_File
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mpi_File
 * Method:    open
 * Signature: (JLjava/lang/String;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_open
  (JNIEnv *, jobject, jlong, jstring, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    close
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_close
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    delete
 * Signature: (Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_delete
  (JNIEnv *, jclass, jstring, jlong);

/*
 * Class:     mpi_File
 * Method:    setSize
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_setSize
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_File
 * Method:    preallocate
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_preallocate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_File
 * Method:    getSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    getGroup
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getGroup
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    getAMode
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mpi_File_getAMode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    setInfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_setInfo
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_File
 * Method:    getInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    setView
 * Signature: (JJJJLjava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_setView
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jstring, jlong);

/*
 * Class:     mpi_File
 * Method:    readAt
 * Signature: (JJLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAt
  (JNIEnv *, jobject, jlong, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    readAtAll
 * Signature: (JJLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAtAll
  (JNIEnv *, jobject, jlong, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeAt
 * Signature: (JJLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAt
  (JNIEnv *, jobject, jlong, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeAtAll
 * Signature: (JJLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAtAll
  (JNIEnv *, jobject, jlong, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    iReadAt
 * Signature: (JJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iReadAt
  (JNIEnv *, jobject, jlong, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iReadAtAll
 * Signature: (JJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iReadAtAll
  (JNIEnv *, jobject, jlong, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iWriteAt
 * Signature: (JJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iWriteAt
  (JNIEnv *, jobject, jlong, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iWriteAtAll
 * Signature: (JJLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iWriteAtAll
  (JNIEnv *, jobject, jlong, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    read
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_read
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    readAll
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAll
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    write
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_write
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeAll
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAll
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    iRead
 * Signature: (JLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iRead
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iReadAll
 * Signature: (JLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iReadAll
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iWrite
 * Signature: (JLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iWrite
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iWriteAll
 * Signature: (JLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iWriteAll
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    seek
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_mpi_File_seek
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     mpi_File
 * Method:    getPosition
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getPosition
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    getByteOffset
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getByteOffset
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_File
 * Method:    readShared
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readShared
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeShared
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeShared
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    iReadShared
 * Signature: (JLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iReadShared
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    iWriteShared
 * Signature: (JLjava/nio/Buffer;IJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_iWriteShared
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    readOrdered
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readOrdered
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeOrdered
 * Signature: (JLjava/lang/Object;ZIIJI[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeOrdered
  (JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jlong, jint, jlongArray);

/*
 * Class:     mpi_File
 * Method:    seekShared
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_mpi_File_seekShared
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     mpi_File
 * Method:    getPositionShared
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getPositionShared
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    readAtAllBegin
 * Signature: (JJLjava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAtAllBegin
  (JNIEnv *, jobject, jlong, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    readAtAllEnd
 * Signature: (JLjava/lang/Object;[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAtAllEnd
  (JNIEnv *, jobject, jlong, jobject, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeAtAllBegin
 * Signature: (JJLjava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAtAllBegin
  (JNIEnv *, jobject, jlong, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    writeAtAllEnd
 * Signature: (JLjava/lang/Object;[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAtAllEnd
  (JNIEnv *, jobject, jlong, jobject, jlongArray);

/*
 * Class:     mpi_File
 * Method:    readAllBegin
 * Signature: (JLjava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAllBegin
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    readAllEnd
 * Signature: (JLjava/lang/Object;[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readAllEnd
  (JNIEnv *, jobject, jlong, jobject, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeAllBegin
 * Signature: (JLjava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAllBegin
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    writeAllEnd
 * Signature: (JLjava/lang/Object;[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeAllEnd
  (JNIEnv *, jobject, jlong, jobject, jlongArray);

/*
 * Class:     mpi_File
 * Method:    readOrderedBegin
 * Signature: (JLjava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readOrderedBegin
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    readOrderedEnd
 * Signature: (JLjava/lang/Object;[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_readOrderedEnd
  (JNIEnv *, jobject, jlong, jobject, jlongArray);

/*
 * Class:     mpi_File
 * Method:    writeOrderedBegin
 * Signature: (JLjava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeOrderedBegin
  (JNIEnv *, jobject, jlong, jobject, jint, jlong);

/*
 * Class:     mpi_File
 * Method:    writeOrderedEnd
 * Signature: (JLjava/lang/Object;[J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_writeOrderedEnd
  (JNIEnv *, jobject, jlong, jobject, jlongArray);

/*
 * Class:     mpi_File
 * Method:    getTypeExtent
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mpi_File_getTypeExtent
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_File
 * Method:    setAtomicity
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_setAtomicity
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     mpi_File
 * Method:    getAtomicity
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_mpi_File_getAtomicity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    sync
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mpi_File_sync
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    setErrhandler
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_mpi_File_setErrhandler
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     mpi_File
 * Method:    getErrhandler
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_File_getErrhandler
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_File
 * Method:    callErrhandler
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_mpi_File_callErrhandler
  (JNIEnv *, jobject, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
