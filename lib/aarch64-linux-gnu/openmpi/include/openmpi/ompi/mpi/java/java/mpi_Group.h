/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mpi_Group */

#ifndef _Included_mpi_Group
#define _Included_mpi_Group
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mpi_Group
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mpi_Group_init
  (JNIEnv *, jclass);

/*
 * Class:     mpi_Group
 * Method:    getEmpty
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_getEmpty
  (JNIEnv *, jclass);

/*
 * Class:     mpi_Group
 * Method:    getSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mpi_Group_getSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Group
 * Method:    getRank
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mpi_Group_getRank
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Group
 * Method:    free
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_free
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mpi_Group
 * Method:    translateRanks
 * Signature: (J[IJ)[I
 */
JNIEXPORT jintArray JNICALL Java_mpi_Group_translateRanks
  (JNIEnv *, jclass, jlong, jintArray, jlong);

/*
 * Class:     mpi_Group
 * Method:    compare
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mpi_Group_compare
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mpi_Group
 * Method:    union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mpi_Group
 * Method:    intersection
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_intersection
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mpi_Group
 * Method:    difference
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_difference
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mpi_Group
 * Method:    incl
 * Signature: (J[I)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_incl
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     mpi_Group
 * Method:    excl
 * Signature: (J[I)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_excl
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     mpi_Group
 * Method:    rangeIncl
 * Signature: (J[[I)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_rangeIncl
  (JNIEnv *, jobject, jlong, jobjectArray);

/*
 * Class:     mpi_Group
 * Method:    rangeExcl
 * Signature: (J[[I)J
 */
JNIEXPORT jlong JNICALL Java_mpi_Group_rangeExcl
  (JNIEnv *, jobject, jlong, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
